{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from '../../components/TodoItem';\nimport AddTodo from '../../components/AddTodo';\nimport { createTodo, updateTodo, deleteTodo } from '../../api/TodoAPI';\nimport { Heading } from '@chakra-ui/react';\nimport { VStack } from '@chakra-ui/react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getTodosAction } from \"../../store/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [todosData, setTodosData] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    dispatch(getTodosAction());\n  };\n\n  const todoListData = useSelector(state => state.todoList);\n  const {\n    todos\n  } = todoListData;\n  if (todos) console.log(todos);\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    console.log(formData);\n    createTodo(formData).then(_ref => {\n      let {\n        status,\n        data\n      } = _ref;\n\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodosData(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo._id, todo).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodosData(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(_ref3 => {\n      let {\n        status,\n        data\n      } = _ref3;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodosData(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    p: 3,\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"8\",\n      fontWeight: \"extrabold\",\n      size: \"2xl\",\n      children: \"TODO APP\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      createTodo: handleSaveTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoItem, {\n      todos: todosData,\n      updateTodo: handleUpdateTodo,\n      deleteTodo: handleDeleteTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"Qv8Vqo2XPoLXpRUMb1iMHuk77cE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","createTodo","updateTodo","deleteTodo","Heading","VStack","useDispatch","useSelector","getTodosAction","App","dispatch","todosData","setTodosData","fetchTodos","todoListData","state","todoList","todos","console","log","handleSaveTodo","e","formData","preventDefault","then","status","data","Error","catch","err","handleUpdateTodo","todo","_id","handleDeleteTodo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,SAAkBC,UAAlB,EAA8BC,UAA9B,EAA0CC,UAA1C,QAA2D,mBAA3D;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAR,QAA6B,qBAA7B;;;AAGA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AACxB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAS,EAAT,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAM;AACrBH,IAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACH,GAFD;;AAIA,QAAMM,YAAY,GAAGP,WAAW,CAAEQ,KAAD,IAAsBA,KAAK,CAACC,QAA7B,CAAhC;AACA,QAAM;AAACC,IAAAA;AAAD,MAAUH,YAAhB;AACA,MAAIG,KAAJ,EAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AAEX,QAAMG,cAAc,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAA8C;AACjED,IAAAA,CAAC,CAACE,cAAF;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACArB,IAAAA,UAAU,CAACqB,QAAD,CAAV,CACKE,IADL,CACU,QAAoB;AAAA,UAAnB;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAmB;;AACtB,UAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIE,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACDf,MAAAA,YAAY,CAACc,IAAI,CAACT,KAAN,CAAZ;AACH,KANL,EAOKW,KAPL,CAOYC,GAAD,IAASX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAPpB;AAQH,GAXD;;AAaA,QAAMC,gBAAgB,GAAIC,IAAD,IAAsB;AAC3C7B,IAAAA,UAAU,CAAC6B,IAAI,CAACC,GAAN,EAAWD,IAAX,CAAV,CACKP,IADL,CACU,SAAoB;AAAA,UAAnB;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAmB;;AACtB,UAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDf,MAAAA,YAAY,CAACc,IAAI,CAACT,KAAN,CAAZ;AACH,KANL,EAOKW,KAPL,CAOYC,GAAD,IAASX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAPpB;AAQH,GATD;;AAWA,QAAMI,gBAAgB,GAAID,GAAD,IAAuB;AAC5C7B,IAAAA,UAAU,CAAC6B,GAAD,CAAV,CACKR,IADL,CACU,SAAoB;AAAA,UAAnB;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,OAAmB;;AACtB,UAAID,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIE,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDf,MAAAA,YAAY,CAACc,IAAI,CAACT,KAAN,CAAZ;AACH,KANL,EAOKW,KAPL,CAOYC,GAAD,IAASX,OAAO,CAACC,GAAR,CAAYU,GAAZ,CAPpB;AAQH,GATD;;AAWA,sBACI,QAAC,MAAD;AAAQ,IAAA,CAAC,EAAE,CAAX;AAAA,4BACI,QAAC,OAAD;AACI,MAAA,EAAE,EAAC,GADP;AAEI,MAAA,UAAU,EAAC,WAFf;AAGI,MAAA,IAAI,EAAC,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAOI,QAAC,OAAD;AAAS,MAAA,UAAU,EAAET;AAArB;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAET,SAAjB;AAA4B,MAAA,UAAU,EAAEmB,gBAAxC;AAA0D,MAAA,UAAU,EAAEG;AAAtE;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA/DD;;GAAMxB,G;UACeH,W,EAWIC,W;;;KAZnBE,G;AAiEN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport TodoItem from '../../components/TodoItem'\nimport AddTodo from '../../components/AddTodo'\nimport {getTodos, createTodo, updateTodo, deleteTodo} from '../../api/TodoAPI'\nimport {Heading} from '@chakra-ui/react'\nimport {VStack} from '@chakra-ui/react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getTodosAction} from \"../../store/actions\";\nimport {RootState} from \"../../store\";\n\nconst App: React.FC = () => {\n    const dispatch = useDispatch();\n    const [todosData, setTodosData] = useState<Todo[]>([])\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    const fetchTodos = () => {\n        dispatch(getTodosAction());\n    };\n\n    const todoListData = useSelector((state: RootState) => state.todoList);\n    const {todos} = todoListData;\n    if (todos) console.log(todos)\n\n    const handleSaveTodo = (e: React.FormEvent, formData: Todo): void => {\n        e.preventDefault()\n        console.log(formData)\n        createTodo(formData)\n            .then(({status, data}) => {\n                if (status !== 201) {\n                    throw new Error('Error! Todo not saved')\n                }\n                setTodosData(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleUpdateTodo = (todo: Todo): void => {\n        updateTodo(todo._id, todo)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not updated')\n                }\n                setTodosData(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleDeleteTodo = (_id: string): void => {\n        deleteTodo(_id)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not deleted')\n                }\n                setTodosData(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    return (\n        <VStack p={3}>\n            <Heading\n                mb='8'\n                fontWeight='extrabold'\n                size='2xl'>\n                TODO APP\n            </Heading>\n            <AddTodo createTodo={handleSaveTodo}/>\n            <TodoItem todos={todosData} updateTodo={handleUpdateTodo} deleteTodo={handleDeleteTodo}/>\n        </VStack>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}