{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8000/api/todos';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl);\n    console.log(todos);\n    return todos.data.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description\n    };\n    const saveTodo = await axios.post(baseUrl, todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async todo => {\n  try {\n    const updatedTodo = await axios.patch(`${baseUrl}/${todo._id}`);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/api/TodoAPI.ts"],"names":["axios","baseUrl","getTodos","todos","get","console","log","data","error","Error","addTodo","formData","todo","name","description","saveTodo","post","updateTodo","updatedTodo","patch","_id","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,OAAe,GAAG,iCAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAkC;AACtD,MAAI;AACA,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC5CH,OAD4C,CAAhD;AAGAI,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,WAAOA,KAAK,CAACI,IAAN,CAAWA,IAAlB;AACH,GAND,CAME,OAAOC,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAVM;AAYP,OAAO,MAAME,OAAO,GAAG,MACnBC,QADmB,IAEmB;AACtC,MAAI;AACA,UAAMC,IAAuB,GAAG;AAC5BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADa;AAE5BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG;AAFM,KAAhC;AAIA,UAAMC,QAAoC,GAAG,MAAMf,KAAK,CAACgB,IAAN,CAC/Cf,OAD+C,EAE/CW,IAF+C,CAAnD;AAIA,WAAOG,QAAP;AACH,GAVD,CAUE,OAAOP,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAhBM;AAkBP,OAAO,MAAMS,UAAU,GAAG,MACtBL,IADsB,IAEgB;AACtC,MAAI;AACA,UAAMM,WAAuC,GAAG,MAAMlB,KAAK,CAACmB,KAAN,CACjD,GAAElB,OAAQ,IAAGW,IAAI,CAACQ,GAAI,EAD2B,CAAtD;AAGA,WAAOF,WAAP;AACH,GALD,CAKE,OAAOV,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAXM;AAaP,OAAO,MAAMa,UAAU,GAAG,MACtBD,GADsB,IAEgB;AACtC,MAAI;AACA,UAAME,WAAuC,GAAG,MAAMtB,KAAK,CAACuB,MAAN,CACjD,GAAEtB,OAAQ,IAAGmB,GAAI,EADgC,CAAtD;AAGA,WAAOE,WAAP;AACH,GALD,CAKE,OAAOd,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAXM","sourcesContent":["import axios, {AxiosResponse} from 'axios'\n\nconst baseUrl: string = 'http://localhost:8000/api/todos'\n\nexport const getTodos = async (): Promise<ApiDataType> => {\n    try {\n        const todos: AxiosResponse<ApiDataType> = await axios.get(\n            baseUrl\n        )\n        console.log(todos)\n        return todos.data.data\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const addTodo = async (\n    formData: Todo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todo: Omit<Todo, '_id'> = {\n            name: formData.name,\n            description: formData.description,\n        }\n        const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n            baseUrl,\n            todo\n        )\n        return saveTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const updateTodo = async (\n    todo: Todo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const updatedTodo: AxiosResponse<ApiDataType> = await axios.patch(\n            `${baseUrl}/${todo._id}`,\n        )\n        return updatedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const deleteTodo = async (\n    _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n            `${baseUrl}/${_id}`\n        )\n        return deletedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}