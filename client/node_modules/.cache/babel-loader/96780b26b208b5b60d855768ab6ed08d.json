{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/TodoItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { HStack, VStack, Text, IconButton, StackDivider, Spacer, Badge, Heading, Modal, ModalOverlay, ModalContent, ModalHeader, ModalCloseButton, ModalBody, Input, ModalFooter, Button } from '@chakra-ui/react';\nimport { FaTrash, FaPen, FaCheck } from \"react-icons/fa\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoItem = _ref => {\n  _s();\n\n  let {\n    todos,\n    deleteTodo\n  } = _ref;\n  const [todo, setTodo] = useState(\"\");\n  const [modalValue, setModalValue] = useState({\n    name: '',\n    description: ''\n  });\n  const [isOpen, setIsOpen] = useState(false);\n\n  const onChange = e => {\n    setModalValue({ ...modalValue,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function onClose() {\n    setIsOpen(false);\n  }\n\n  function handleEditSubmit(e) {\n    e.preventDefault(); // editTodo(modalValue.id, modalValue)\n\n    setModalValue({\n      name: '',\n      description: ''\n    });\n    setIsOpen(false);\n  }\n\n  function handleEditClick(todo) {\n    setIsOpen(true);\n    setModalValue({\n      name: todo.name,\n      description: todo.description\n    });\n    console.log(todo);\n  }\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 22\n    }, this),\n    borderColor: \"gray.100\",\n    borderWidth: \"2px\",\n    p: \"4\",\n    borderRadius: \"lg\",\n    w: \"100%\",\n    maxW: {\n      base: '90vw',\n      sm: '80vw',\n      lg: '50vw',\n      xl: '40vw'\n    },\n    alignItems: \"stretch\",\n    children: todos && todos.length > 0 && todos.map(todo => /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Heading, {\n        fontSize: \"xl\",\n        children: todo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        mt: 4,\n        children: todo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n        m: \"15\",\n        fontSize: \"0.8em\",\n        colorScheme: todo.status === 'incomplete' ? 'red' : 'green',\n        children: todo.status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"green.500\",\n        icon: /*#__PURE__*/_jsxDEV(FaCheck, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 31\n        }, this),\n        isRound: true,\n        onClick: () => handleEditClick(todo),\n        \"aria-label\": \"lege\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"blue.500\",\n        icon: /*#__PURE__*/_jsxDEV(FaPen, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 31\n        }, this),\n        isRound: true,\n        onClick: () => handleEditClick(todo),\n        \"aria-label\": \"lege\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        color: \"red.500\",\n        icon: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 31\n        }, this),\n        isRound: true,\n        onClick: () => deleteTodo(todo._id),\n        \"aria-label\": \"lege\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"Edit Your Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleEditSubmit,\n            children: [/*#__PURE__*/_jsxDEV(ModalBody, {\n              children: [\"Name: \", /*#__PURE__*/_jsxDEV(Input, {\n                name: \"name\",\n                value: modalValue.name,\n                variant: \"outline\",\n                type: \"text\",\n                placeholder: \"name\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 43\n              }, this), \"Description: \", /*#__PURE__*/_jsxDEV(Input, {\n                value: modalValue.description,\n                variant: \"outline\",\n                name: \"description\",\n                type: \"text\",\n                placeholder: \"description\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 50\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                colorScheme: \"teal\",\n                mr: 3,\n                onClick: onClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"submit\",\n                colorScheme: \"teal\",\n                mr: 3,\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this)]\n    }, todo._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoItem, \"j5mb2UkaevMyMLX1PNZsNeSinfI=\");\n\n_c = TodoItem;\nexport default TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/TodoItem.tsx"],"names":["React","useState","HStack","VStack","Text","IconButton","StackDivider","Spacer","Badge","Heading","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Input","ModalFooter","Button","FaTrash","FaPen","FaCheck","TodoItem","todos","deleteTodo","todo","setTodo","modalValue","setModalValue","name","description","isOpen","setIsOpen","onChange","e","target","value","onClose","handleEditSubmit","preventDefault","handleEditClick","console","log","base","sm","lg","xl","length","map","status","_id"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {\n    HStack,\n    VStack,\n    Text,\n    IconButton,\n    StackDivider,\n    Spacer,\n    Badge,\n    Heading,\n    Modal,\n    ModalOverlay,\n    ModalContent,\n    ModalHeader,\n    ModalCloseButton,\n    ModalBody,\n    Input,\n    ModalFooter,\n    Button,\n} from '@chakra-ui/react';\nimport {FaTrash, FaPen, FaCheck} from \"react-icons/fa\";\n\ntype Props = TodoProps & {\n    todos: Todo[],\n    deleteTodo: (_id: string) => void\n}\n\nconst TodoItem: React.FC<Props> = ({todos, deleteTodo}) => {\n    const [todo, setTodo] = useState(\"\");\n    const [modalValue, setModalValue] = useState({\n        name: '',\n        description: ''\n    })\n\n    const [isOpen, setIsOpen] = useState(false)\n\n    const onChange = e => {\n        setModalValue({...modalValue, [e.target.name]: e.target.value});\n    };\n\n    function onClose() {\n        setIsOpen(false)\n    }\n\n    function handleEditSubmit(e) {\n        e.preventDefault();\n        // editTodo(modalValue.id, modalValue)\n        setModalValue({\n            name: '',\n            description: ''\n        })\n        setIsOpen(false)\n    }\n\n    function handleEditClick(todo) {\n        setIsOpen(true)\n        setModalValue({\n            name: todo.name,\n            description: todo.description\n        })\n        console.log(todo)\n    }\n\n    return (\n        <VStack\n            divider={<StackDivider/>}\n            borderColor='gray.100'\n            borderWidth='2px'\n            p='4'\n            borderRadius='lg'\n            w='100%'\n            maxW={{base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw'}}\n            alignItems='stretch'\n        >\n            {todos && todos.length > 0 && todos.map((todo) => (\n                <HStack key={todo._id}>\n                    <Heading fontSize='xl'>{todo.name}</Heading>\n                    <Text mt={4}>{todo.description}</Text>\n                    <Spacer/>\n                    <Badge m='15' fontSize='0.8em' colorScheme={todo.status === 'incomplete' ? 'red' : 'green'}>\n                        {todo.status}\n                    </Badge>\n                    <Spacer/>\n                    <IconButton\n                        color=\"green.500\"\n                        icon={<FaCheck/>}\n                        isRound={true}\n                        onClick={() => handleEditClick(todo)}\n                        aria-label={\"lege\"}/>\n                    <IconButton\n                        color=\"blue.500\"\n                        icon={<FaPen/>}\n                        isRound={true}\n                        onClick={() => handleEditClick(todo)}\n                        aria-label={\"lege\"}/>\n                    <IconButton\n                        color=\"red.500\"\n                        icon={<FaTrash/>}\n                        isRound={true}\n                        onClick={() => deleteTodo(todo._id)}\n                        aria-label={\"lege\"}/>\n\n                    {/* modal for editing a todo */}\n                    <Modal isOpen={isOpen} onClose={onClose}>\n                        <ModalOverlay/>\n                        <ModalContent>\n                            <ModalHeader>Edit Your Todo</ModalHeader>\n                            <ModalCloseButton/>\n                            <form onSubmit={handleEditSubmit}>\n                                <ModalBody>\n                                    Name: <Input\n                                    name=\"name\"\n                                    value={modalValue.name}\n                                    variant=\"outline\"\n                                    type=\"text\"\n                                    placeholder=\"name\"\n                                    onChange={onChange}/>\n                                    Description: <Input\n                                    value={modalValue.description}\n                                    variant=\"outline\"\n                                    name=\"description\"\n                                    type=\"text\"\n                                    placeholder=\"description\"\n                                    onChange={onChange}/>\n                                </ModalBody>\n                                <ModalFooter>\n                                    <Button colorScheme=\"teal\" mr={3} onClick={onClose}>\n                                        Close\n                                    </Button>\n                                    <Button type=\"submit\" colorScheme=\"teal\" mr={3}>\n                                        Update\n                                    </Button>\n                                </ModalFooter>\n                            </form>\n\n                        </ModalContent>\n                    </Modal>\n                </HStack>\n            ))}\n        </VStack>\n    )\n}\n\nexport default TodoItem"]},"metadata":{},"sourceType":"module"}