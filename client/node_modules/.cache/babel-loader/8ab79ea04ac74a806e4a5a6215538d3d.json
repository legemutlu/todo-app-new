{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8000/api/todos';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl);\n    return todos.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const getTodo = async _id => {\n  try {\n    const todo = await axios.get(`${baseUrl}/${_id}`);\n    return todo.data;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const createTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      startDate: formData === null || formData === void 0 ? void 0 : formData.startDate,\n      endDate: formData === null || formData === void 0 ? void 0 : formData.endDate\n    };\n    const saveTodo = await axios.post(baseUrl, todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async (todo, config) => {\n  try {\n    console.log(todo);\n    const updatedTodo = await axios.patch(`${baseUrl}/${todo._id}`, todo, config);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/api/TodoAPI.ts"],"names":["axios","baseUrl","getTodos","todos","get","data","error","Error","getTodo","_id","todo","createTodo","formData","name","description","startDate","endDate","saveTodo","post","updateTodo","config","console","log","updatedTodo","patch","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,OAAe,GAAG,iCAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAuC;AAC3D,MAAI;AACA,UAAMC,KAAsC,GAAG,MAAMH,KAAK,CAACI,GAAN,CACjDH,OADiD,CAArD;AAGA,WAAOE,KAAK,CAACE,IAAb;AACH,GALD,CAKE,OAAOC,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CATM;AAWP,OAAO,MAAME,OAAO,GAAG,MAAOC,GAAP,IAAkD;AACrE,MAAI;AACA,UAAMC,IAAqC,GAAG,MAAMV,KAAK,CAACI,GAAN,CAC/C,GAAEH,OAAQ,IAAGQ,GAAI,EAD8B,CAApD;AAGA,WAAOC,IAAI,CAACL,IAAZ;AACH,GALD,CAKE,OAAOC,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CATM;AAWP,OAAO,MAAMK,UAAU,GAAG,MACtBC,QADsB,IAEqB;AAC3C,MAAI;AACA,UAAMF,IAAuB,GAAG;AAC5BG,MAAAA,IAAI,EAAED,QAAQ,CAACC,IADa;AAE5BC,MAAAA,WAAW,EAAEF,QAAQ,CAACE,WAFM;AAG5BC,MAAAA,SAAS,EAAEH,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEG,SAHO;AAI5BC,MAAAA,OAAO,EAAEJ,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEI;AAJS,KAAhC;AAMA,UAAMC,QAAyC,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CACpDjB,OADoD,EAEpDS,IAFoD,CAAxD;AAIA,WAAOO,QAAP;AACH,GAZD,CAYE,OAAOX,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAlBM;AAoBP,OAAO,MAAMa,UAAU,GAAG,OACtBT,IADsB,EAEtBU,MAFsB,KAGqB;AAC3C,MAAI;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,IAAZ;AACA,UAAMa,WAA4C,GAAG,MAAMvB,KAAK,CAACwB,KAAN,CACtD,GAAEvB,OAAQ,IAAGS,IAAI,CAACD,GAAI,EADgC,EAC7BC,IAD6B,EACvBU,MADuB,CAA3D;AAGA,WAAOG,WAAP;AACH,GAND,CAME,OAAOjB,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAbM;AAeP,OAAO,MAAMmB,UAAU,GAAG,MACtBhB,GADsB,IAEqB;AAC3C,MAAI;AACA,UAAMiB,WAA4C,GAAG,MAAM1B,KAAK,CAAC2B,MAAN,CACtD,GAAE1B,OAAQ,IAAGQ,GAAI,EADqC,CAA3D;AAGA,WAAOiB,WAAP;AACH,GALD,CAKE,OAAOpB,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAXM","sourcesContent":["import axios, {AxiosResponse} from 'axios'\n\nconst baseUrl: string = 'http://localhost:8000/api/todos'\n\nexport const getTodos = async (): Promise<ResponseDataType> => {\n    try {\n        const todos: AxiosResponse<ResponseDataType> = await axios.get(\n            baseUrl\n        )\n        return todos.data;\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const getTodo = async (_id: string): Promise<ResponseDataType> => {\n    try {\n        const todo: AxiosResponse<ResponseDataType> = await axios.get(\n            `${baseUrl}/${_id}`,\n        )\n        return todo.data;\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const createTodo = async (\n    formData: Todo\n): Promise<AxiosResponse<ResponseDataType>> => {\n    try {\n        const todo: Omit<Todo, '_id'> = {\n            name: formData.name,\n            description: formData.description,\n            startDate: formData?.startDate,\n            endDate: formData?.endDate,\n        }\n        const saveTodo: AxiosResponse<ResponseDataType> = await axios.post(\n            baseUrl,\n            todo\n        )\n        return saveTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const updateTodo = async (\n    todo: Todo,\n    config: any\n): Promise<AxiosResponse<ResponseDataType>> => {\n    try {\n        console.log(todo)\n        const updatedTodo: AxiosResponse<ResponseDataType> = await axios.patch(\n            `${baseUrl}/${todo._id}`, todo, config\n        )\n        return updatedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const deleteTodo = async (\n    _id: string\n): Promise<AxiosResponse<ResponseDataType>> => {\n    try {\n        const deletedTodo: AxiosResponse<ResponseDataType> = await axios.delete(\n            `${baseUrl}/${_id}`\n        )\n        return deletedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}