{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getTodos, createTodo, updateTodo, deleteTodo } from '../../api/TodoAPI';\nimport { Heading } from '@chakra-ui/react';\nimport { VStack, IconButton } from '@chakra-ui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(todos => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    console.log(formData);\n    createTodo(formData).then(_ref => {\n      let {\n        status,\n        data\n      } = _ref;\n\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo._id, todo).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(_ref3 => {\n      let {\n        status,\n        data\n      } = _ref3;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    p: 4,\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      icon: colorMode === 'light' ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 47\n      }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 58\n      }, this),\n      isRound: \"true\",\n      size: \"lg\",\n      alignSelf: \"flex-end\",\n      onClick: toggleColorMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Heading, {\n      mb: \"8\",\n      fontWeight: \"extrabold\",\n      size: \"2xl\",\n      bgGradient: \"linear(to-r, pink.500, pink.300, blue.500)\",\n      bgClip: \"text\",\n      children: \"Todo Application\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx"],"names":["React","useEffect","useState","getTodos","createTodo","updateTodo","deleteTodo","Heading","VStack","IconButton","App","todos","setTodos","fetchTodos","then","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","data","Error","handleUpdateTodo","todo","_id","handleDeleteTodo","colorMode","toggleColorMode"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport TodoItem from '../../components/TodoItem'\nimport AddTodo from '../../components/AddTodo'\nimport {getTodos, createTodo, updateTodo, deleteTodo} from '../../api/TodoAPI'\nimport {Heading} from '@chakra-ui/react'\nimport {VStack, IconButton, useColorMode} from '@chakra-ui/react';\n\nconst App: React.FC = () => {\n    const [todos, setTodos] = useState<Todo[]>([])\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    const fetchTodos = (): void => {\n        getTodos()\n            .then((todos: Todo[] | any) => setTodos(todos))\n            .catch((err: Error) => console.log(err))\n    }\n\n    const handleSaveTodo = (e: React.FormEvent, formData: Todo): void => {\n        e.preventDefault()\n        console.log(formData)\n        createTodo(formData)\n            .then(({status, data}) => {\n                if (status !== 201) {\n                    throw new Error('Error! Todo not saved')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleUpdateTodo = (todo: Todo): void => {\n        updateTodo(todo._id, todo)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not updated')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleDeleteTodo = (_id: string): void => {\n        deleteTodo(_id)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not deleted')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    return (\n        <VStack p={4}>\n            <IconButton\n                icon={colorMode === 'light' ? <FaSun/> : <FaMoon/>}\n                isRound='true'\n                size='lg'\n                alignSelf='flex-end'\n                onClick={toggleColorMode}\n            />\n            <Heading\n                mb='8'\n                fontWeight='extrabold'\n                size='2xl'\n                bgGradient='linear(to-r, pink.500, pink.300, blue.500)'\n                bgClip='text'\n            >\n                Todo Application\n            </Heading>\n        </VStack>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}