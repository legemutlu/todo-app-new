{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getTodos, addTodo, updateTodo, deleteTodo } from '../../api/TodoAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(_ref => {\n      let {\n        data: {\n          todos\n        }\n      } = _ref;\n      return setTodos(todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    addTodo(formData).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo).then(_ref3 => {\n      let {\n        status,\n        data\n      } = _ref3;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(_ref4 => {\n      let {\n        status,\n        data\n      } = _ref4;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      saveTodo: handleSaveTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), todos.map(todo => console.log(todo))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx"],"names":["React","useEffect","useState","getTodos","addTodo","updateTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","data","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","Error","handleUpdateTodo","todo","handleDeleteTodo","_id","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,QAAR,EAAkBC,OAAlB,EAA2BC,UAA3B,EAAuCC,UAAvC,QAAwD,mBAAxD;;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAS,EAAT,CAAlC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,UAAU,GAAG,MAAY;AAC3BP,IAAAA,QAAQ,GACHQ,IADL,CACU;AAAA,UAAC;AAACC,QAAAA,IAAI,EAAE;AAACJ,UAAAA;AAAD;AAAP,OAAD;AAAA,aAAmCC,QAAQ,CAACD,KAAD,CAA3C;AAAA,KADV,EAEKK,KAFL,CAEYC,GAAD,IAAgBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAF3B;AAGH,GAJD;;AAMA,QAAMG,cAAc,GAAG,CAACC,CAAD,EAAqBC,QAArB,KAA8C;AACjED,IAAAA,CAAC,CAACE,cAAF;AACAhB,IAAAA,OAAO,CAACe,QAAD,CAAP,CACKR,IADL,CACU,SAAoB;AAAA,UAAnB;AAACU,QAAAA,MAAD;AAAST,QAAAA;AAAT,OAAmB;;AACtB,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIC,KAAJ,CAAU,uBAAV,CAAN;AACH;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACH,KANL,EAOKK,KAPL,CAOYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AAQH,GAVD;;AAYA,QAAMS,gBAAgB,GAAIC,IAAD,IAAsB;AAC3CnB,IAAAA,UAAU,CAACmB,IAAD,CAAV,CACKb,IADL,CACU,SAAoB;AAAA,UAAnB;AAACU,QAAAA,MAAD;AAAST,QAAAA;AAAT,OAAmB;;AACtB,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACH,KANL,EAOKK,KAPL,CAOYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AAQH,GATD;;AAWA,QAAMW,gBAAgB,GAAIC,GAAD,IAAuB;AAC5CpB,IAAAA,UAAU,CAACoB,GAAD,CAAV,CACKf,IADL,CACU,SAAoB;AAAA,UAAnB;AAACU,QAAAA,MAAD;AAAST,QAAAA;AAAT,OAAmB;;AACtB,UAAIS,MAAM,KAAK,GAAf,EAAoB;AAChB,cAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACH;;AACDb,MAAAA,QAAQ,CAACG,IAAI,CAACJ,KAAN,CAAR;AACH,KANL,EAOKK,KAPL,CAOYC,GAAD,IAASC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAPpB;AAQH,GATD;;AAWA,sBACI;AAAM,IAAA,SAAS,EAAC,KAAhB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,OAAD;AAAS,MAAA,QAAQ,EAAEG;AAAnB;AAAA;AAAA;AAAA;AAAA,YAFJ,EAGKT,KAAK,CAACmB,GAAN,CAAWH,IAAD,IACPT,OAAO,CAACC,GAAR,CAAYQ,IAAZ,CADH,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAxDD;;GAAMjB,G;;KAAAA,G;AA0DN,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport {getTodos, addTodo, updateTodo, deleteTodo} from '../../api/TodoAPI'\n\nconst App: React.FC = () => {\n    const [todos, setTodos] = useState<Todo[]>([])\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    const fetchTodos = (): void => {\n        getTodos()\n            .then(({data: {todos}}: Todo[] | any) => setTodos(todos))\n            .catch((err: Error) => console.log(err))\n    }\n\n    const handleSaveTodo = (e: React.FormEvent, formData: Todo): void => {\n        e.preventDefault()\n        addTodo(formData)\n            .then(({status, data}) => {\n                if (status !== 201) {\n                    throw new Error('Error! Todo not saved')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleUpdateTodo = (todo: Todo): void => {\n        updateTodo(todo)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not updated')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleDeleteTodo = (_id: string): void => {\n        deleteTodo(_id)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not deleted')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    return (\n        <main className='App'>\n            <h1>My Todos</h1>\n            <AddTodo saveTodo={handleSaveTodo}/>\n            {todos.map((todo: Todo) => (\n                console.log(todo)\n            ))}\n        </main>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}