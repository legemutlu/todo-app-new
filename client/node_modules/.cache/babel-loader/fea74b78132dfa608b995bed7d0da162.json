{"ast":null,"code":"import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\n\n\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\n\n\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\n\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/node_modules/@chakra-ui/checkbox/dist/chakra-ui-checkbox.esm.js"],"names":["isInputEvent","addItem","__DEV__","omit","warn","dataAttr","callAllHandlers","focus","callAll","cx","createContext","mergeRefs","React","useCallback","useRef","useState","useCallbackRef","useControllableState","useBoolean","useControllableProp","useSafeLayoutEffect","useUpdateEffect","chakra","forwardRef","useMultiStyleConfig","omitThemingProps","motion","AnimatePresence","useFormControlProps","visuallyHiddenStyle","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","useCheckboxGroup","props","_props","defaultValue","valueProp","value","onChange","isDisabled","isNative","onChangeProp","_useControllableState","setValue","handleChange","eventOrValue","isChecked","checked","includes","selectedValue","nextValue","filter","v","String","getCheckboxProps","_extends2","checkedKey","some","val","_createContext","name","strict","CheckboxGroupProvider","useCheckboxGroupContext","CheckboxGroup","colorScheme","size","variant","children","_useCheckboxGroup","group","useMemo","createElement","displayName","_objectWithoutPropertiesLoose","excluded","sourceKeys","keys","indexOf","_excluded$2","MotionSvg","custom","svg","CheckIcon","width","viewBox","variants","unchecked","opacity","strokeDashoffset","transition","duration","style","fill","strokeWidth","stroke","strokeDasharray","points","IndeterminateIcon","scaleX","x1","x2","y1","y2","CheckboxTransition","_ref","open","initial","div","scale","animate","exit","display","alignItems","justifyContent","height","CheckboxIcon","isIndeterminate","rest","IconEl","_excluded$1","useCheckbox","formControlProps","isReadOnly","isRequired","isInvalid","id","onBlur","onFocus","ariaDescribedBy","defaultIsChecked","_props$defaultChecked","defaultChecked","checkedProp","isFocusable","_props$tabIndex","tabIndex","undefined","ariaLabel","ariaLabelledBy","ariaInvalid","htmlProps","onBlurProp","onFocusProp","_useBoolean","isFocused","setFocused","_useBoolean2","isHovered","setHovered","_useBoolean3","isActive","setActive","inputRef","_useState","rootIsLabelElement","setRootIsLabelElement","_useState2","checkedState","setCheckedState","_useControllableProp","isControlled","condition","message","event","preventDefault","current","indeterminate","Boolean","off","trulyDisabled","onKeyDown","on","onKeyUp","notInSync","forwardedRef","onPressDown","ref","onMouseDown","onMouseUp","onMouseEnter","onMouseLeave","getRootProps","node","tagName","onClick","_inputRef$current","click","nextTick","getInputProps","type","required","disabled","readOnly","getLabelProps","stopEvent","onTouchStart","state","stopPropagation","_excluded","CheckboxControl","baseStyle","verticalAlign","userSelect","flexShrink","Label","cursor","position","_disabled","Checkbox","mergedProps","styles","ownProps","_ownProps$spacing","spacing","className","iconColor","iconSize","_ownProps$icon","icon","isCheckedProp","_ownProps$isDisabled","inputProps","_useCheckbox","iconStyles","transform","fontSize","color","clonedIcon","cloneElement","__css","container","control","span","marginStart","label"],"mappings":"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","sourcesContent":["import { isInputEvent, addItem, __DEV__, omit, warn, dataAttr, callAllHandlers, focus, callAll, cx } from '@chakra-ui/utils';\nimport { createContext, mergeRefs } from '@chakra-ui/react-utils';\nimport * as React from 'react';\nimport { useCallback, useRef, useState } from 'react';\nimport { useCallbackRef, useControllableState, useBoolean, useControllableProp, useSafeLayoutEffect, useUpdateEffect } from '@chakra-ui/hooks';\nimport { chakra, forwardRef, useMultiStyleConfig, omitThemingProps } from '@chakra-ui/system';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { useFormControlProps } from '@chakra-ui/form-control';\nimport { visuallyHiddenStyle } from '@chakra-ui/visually-hidden';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\n/**\n * React hook that provides all the state management logic\n * for a group of checkboxes.\n *\n * It is consumed by the `CheckboxGroup` component\n */\nfunction useCheckboxGroup(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var _props = props,\n      defaultValue = _props.defaultValue,\n      valueProp = _props.value,\n      onChange = _props.onChange,\n      isDisabled = _props.isDisabled,\n      isNative = _props.isNative;\n  var onChangeProp = useCallbackRef(onChange);\n\n  var _useControllableState = useControllableState({\n    value: valueProp,\n    defaultValue: defaultValue || [],\n    onChange: onChangeProp\n  }),\n      value = _useControllableState[0],\n      setValue = _useControllableState[1];\n\n  var handleChange = useCallback(function (eventOrValue) {\n    if (!value) return;\n    var isChecked = isInputEvent(eventOrValue) ? eventOrValue.target.checked : !value.includes(eventOrValue);\n    var selectedValue = isInputEvent(eventOrValue) ? eventOrValue.target.value : eventOrValue;\n    var nextValue = isChecked ? addItem(value, selectedValue) : value.filter(function (v) {\n      return String(v) !== String(selectedValue);\n    });\n    setValue(nextValue);\n  }, [setValue, value]);\n  var getCheckboxProps = useCallback(function (props) {\n    var _extends2;\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    var checkedKey = isNative ? \"checked\" : \"isChecked\";\n    return _extends({}, props, (_extends2 = {}, _extends2[checkedKey] = value.some(function (val) {\n      return String(props.value) === String(val);\n    }), _extends2.onChange = handleChange, _extends2));\n  }, [handleChange, isNative, value]);\n  return {\n    value: value,\n    isDisabled: isDisabled,\n    onChange: handleChange,\n    setValue: setValue,\n    getCheckboxProps: getCheckboxProps\n  };\n}\n\nvar _createContext = createContext({\n  name: \"CheckboxGroupContext\",\n  strict: false\n}),\n    CheckboxGroupProvider = _createContext[0],\n    useCheckboxGroupContext = _createContext[1];\n/**\n * Used for multiple checkboxes which are bound in one group,\n * and it indicates whether one or more options are selected.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\n\nvar CheckboxGroup = function CheckboxGroup(props) {\n  var colorScheme = props.colorScheme,\n      size = props.size,\n      variant = props.variant,\n      children = props.children,\n      isDisabled = props.isDisabled;\n\n  var _useCheckboxGroup = useCheckboxGroup(props),\n      value = _useCheckboxGroup.value,\n      onChange = _useCheckboxGroup.onChange;\n\n  var group = React.useMemo(function () {\n    return {\n      size: size,\n      onChange: onChange,\n      colorScheme: colorScheme,\n      value: value,\n      variant: variant,\n      isDisabled: isDisabled\n    };\n  }, [size, onChange, colorScheme, value, variant, isDisabled]);\n  return /*#__PURE__*/React.createElement(CheckboxGroupProvider, {\n    value: group\n  }, children);\n};\n\nif (__DEV__) {\n  CheckboxGroup.displayName = \"CheckboxGroup\";\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar _excluded$2 = [\"isIndeterminate\", \"isChecked\"];\n\nvar MotionSvg = \"custom\" in motion ? motion.custom(chakra.svg) : motion(chakra.svg);\n\nvar CheckIcon = function CheckIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 12 10\",\n    variants: {\n      unchecked: {\n        opacity: 0,\n        strokeDashoffset: 16\n      },\n      checked: {\n        opacity: 1,\n        strokeDashoffset: 0,\n        transition: {\n          duration: 0.2\n        }\n      }\n    },\n    style: {\n      fill: \"none\",\n      strokeWidth: 2,\n      stroke: \"currentColor\",\n      strokeDasharray: 16\n    }\n  }, props), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"1.5 6 4.5 9 10.5 1\"\n  }));\n};\n\nvar IndeterminateIcon = function IndeterminateIcon(props) {\n  return /*#__PURE__*/React.createElement(MotionSvg, _extends({\n    width: \"1.2em\",\n    viewBox: \"0 0 24 24\",\n    variants: {\n      unchecked: {\n        scaleX: 0.65,\n        opacity: 0\n      },\n      checked: {\n        scaleX: 1,\n        opacity: 1,\n        transition: {\n          scaleX: {\n            duration: 0\n          },\n          opacity: {\n            duration: 0.02\n          }\n        }\n      }\n    },\n    style: {\n      stroke: \"currentColor\",\n      strokeWidth: 4\n    }\n  }, props), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"21\",\n    x2: \"3\",\n    y1: \"12\",\n    y2: \"12\"\n  }));\n};\n\nvar CheckboxTransition = function CheckboxTransition(_ref) {\n  var open = _ref.open,\n      children = _ref.children;\n  return /*#__PURE__*/React.createElement(AnimatePresence, {\n    initial: false\n  }, open && /*#__PURE__*/React.createElement(motion.div, {\n    variants: {\n      unchecked: {\n        scale: 0.5\n      },\n      checked: {\n        scale: 1\n      }\n    },\n    initial: \"unchecked\",\n    animate: \"checked\",\n    exit: \"unchecked\",\n    style: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"100%\"\n    }\n  }, children));\n};\n\n/**\n * CheckboxIcon is used to visually indicate the checked or indeterminate\n * state of a checkbox.\n *\n * @todo allow users pass their own icon svgs\n */\nvar CheckboxIcon = function CheckboxIcon(props) {\n  var isIndeterminate = props.isIndeterminate,\n      isChecked = props.isChecked,\n      rest = _objectWithoutPropertiesLoose(props, _excluded$2);\n\n  var IconEl = isIndeterminate ? IndeterminateIcon : CheckIcon;\n  return /*#__PURE__*/React.createElement(CheckboxTransition, {\n    open: isChecked || isIndeterminate\n  }, /*#__PURE__*/React.createElement(IconEl, rest));\n};\n\nvar _excluded$1 = [\"defaultIsChecked\", \"defaultChecked\", \"isChecked\", \"isFocusable\", \"onChange\", \"isIndeterminate\", \"name\", \"value\", \"tabIndex\", \"aria-label\", \"aria-labelledby\", \"aria-invalid\"];\n\n/**\n * useCheckbox that provides all the state and focus management logic\n * for a checkbox. It is consumed by the `Checkbox` component\n *\n * @see Docs https://chakra-ui.com/checkbox#hooks\n */\nfunction useCheckbox(props) {\n  if (props === void 0) {\n    props = {};\n  }\n\n  var formControlProps = useFormControlProps(props);\n  var isDisabled = formControlProps.isDisabled,\n      isReadOnly = formControlProps.isReadOnly,\n      isRequired = formControlProps.isRequired,\n      isInvalid = formControlProps.isInvalid,\n      id = formControlProps.id,\n      onBlur = formControlProps.onBlur,\n      onFocus = formControlProps.onFocus,\n      ariaDescribedBy = formControlProps[\"aria-describedby\"];\n\n  var _props = props,\n      defaultIsChecked = _props.defaultIsChecked,\n      _props$defaultChecked = _props.defaultChecked,\n      defaultChecked = _props$defaultChecked === void 0 ? defaultIsChecked : _props$defaultChecked,\n      checkedProp = _props.isChecked,\n      isFocusable = _props.isFocusable,\n      onChange = _props.onChange,\n      isIndeterminate = _props.isIndeterminate,\n      name = _props.name,\n      value = _props.value,\n      _props$tabIndex = _props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? undefined : _props$tabIndex,\n      ariaLabel = _props[\"aria-label\"],\n      ariaLabelledBy = _props[\"aria-labelledby\"],\n      ariaInvalid = _props[\"aria-invalid\"],\n      rest = _objectWithoutPropertiesLoose(_props, _excluded$1);\n\n  var htmlProps = omit(rest, [\"isDisabled\", \"isReadOnly\", \"isRequired\", \"isInvalid\", \"id\", \"onBlur\", \"onFocus\", \"aria-describedby\"]);\n  var onChangeProp = useCallbackRef(onChange);\n  var onBlurProp = useCallbackRef(onBlur);\n  var onFocusProp = useCallbackRef(onFocus);\n\n  var _useBoolean = useBoolean(),\n      isFocused = _useBoolean[0],\n      setFocused = _useBoolean[1];\n\n  var _useBoolean2 = useBoolean(),\n      isHovered = _useBoolean2[0],\n      setHovered = _useBoolean2[1];\n\n  var _useBoolean3 = useBoolean(),\n      isActive = _useBoolean3[0],\n      setActive = _useBoolean3[1];\n\n  var inputRef = useRef(null);\n\n  var _useState = useState(true),\n      rootIsLabelElement = _useState[0],\n      setRootIsLabelElement = _useState[1];\n\n  var _useState2 = useState(!!defaultChecked),\n      checkedState = _useState2[0],\n      setCheckedState = _useState2[1];\n\n  var _useControllableProp = useControllableProp(checkedProp, checkedState),\n      isControlled = _useControllableProp[0],\n      isChecked = _useControllableProp[1];\n\n  warn({\n    condition: !!defaultIsChecked,\n    message: 'The \"defaultIsChecked\" prop has been deprecated and will be removed in a future version. ' + 'Please use the \"defaultChecked\" prop instead, which mirrors default React checkbox behavior.'\n  });\n  var handleChange = useCallback(function (event) {\n    if (isReadOnly || isDisabled) {\n      event.preventDefault();\n      return;\n    }\n\n    if (!isControlled) {\n      if (isChecked) {\n        setCheckedState(event.target.checked);\n      } else {\n        setCheckedState(isIndeterminate ? true : event.target.checked);\n      }\n    }\n\n    onChangeProp == null ? void 0 : onChangeProp(event);\n  }, [isReadOnly, isDisabled, isChecked, isControlled, isIndeterminate, onChangeProp]);\n  useSafeLayoutEffect(function () {\n    if (inputRef.current) {\n      inputRef.current.indeterminate = Boolean(isIndeterminate);\n    }\n  }, [isIndeterminate]);\n  useUpdateEffect(function () {\n    if (isDisabled) {\n      setFocused.off();\n    }\n  }, [isDisabled, setFocused]);\n  var trulyDisabled = isDisabled && !isFocusable;\n  var onKeyDown = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.on();\n    }\n  }, [setActive]);\n  var onKeyUp = useCallback(function (event) {\n    if (event.key === \" \") {\n      setActive.off();\n    }\n  }, [setActive]);\n  /**\n   * Sync state with uncontrolled form libraries like `react-hook-form`.\n   *\n   * These libraries set the checked value for input fields\n   * using their refs. For the checkbox, it sets `ref.current.checked = true | false` directly.\n   *\n   * This means the `isChecked` state will get out of sync with `ref.current.checked`,\n   * even though the input validation with work, the UI will not be up to date.\n   *\n   * Let's correct that by checking and syncing the state accordingly.\n   */\n\n  useSafeLayoutEffect(function () {\n    if (!inputRef.current) return;\n    var notInSync = inputRef.current.checked !== isChecked;\n\n    if (notInSync) {\n      setCheckedState(inputRef.current.checked);\n    }\n  }, [inputRef.current]);\n  var getCheckboxProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    var onPressDown = function onPressDown(event) {\n      // On mousedown, the input blurs and returns focus to the `body`,\n      // we need to prevent this. Native checkboxes keeps focus on `input`\n      event.preventDefault();\n      setActive.on();\n    };\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      \"data-active\": dataAttr(isActive),\n      \"data-hover\": dataAttr(isHovered),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-focus\": dataAttr(isFocused),\n      \"data-indeterminate\": dataAttr(isIndeterminate),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-invalid\": dataAttr(isInvalid),\n      \"data-readonly\": dataAttr(isReadOnly),\n      \"aria-hidden\": true,\n      onMouseDown: callAllHandlers(props.onMouseDown, onPressDown),\n      onMouseUp: callAllHandlers(props.onMouseUp, setActive.off),\n      onMouseEnter: callAllHandlers(props.onMouseEnter, setHovered.on),\n      onMouseLeave: callAllHandlers(props.onMouseLeave, setHovered.off)\n    });\n  }, [isActive, isChecked, isDisabled, isFocused, isHovered, isIndeterminate, isInvalid, isReadOnly, setActive, setHovered.off, setHovered.on]);\n  var getRootProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, htmlProps, props, {\n      ref: mergeRefs(forwardedRef, function (node) {\n        if (!node) return;\n        setRootIsLabelElement(node.tagName === \"LABEL\");\n      }),\n      onClick: callAllHandlers(props.onClick, function () {\n        /**\n         * Accessibility:\n         *\n         * Ideally, `getRootProps` should be spread unto a `label` element.\n         *\n         * If the element was changed using the `as` prop or changing\n         * the dom node `getRootProps` is spread unto (to a `div` or `span`), we'll trigger\n         * click on the input when the element is clicked.\n         * @see Issue https://github.com/chakra-ui/chakra-ui/issues/3480\n         */\n        if (!rootIsLabelElement) {\n          var _inputRef$current;\n\n          (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.click();\n          focus(inputRef.current, {\n            nextTick: true\n          });\n        }\n      }),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [htmlProps, isDisabled, isChecked, isInvalid, rootIsLabelElement]);\n  var getInputProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: mergeRefs(inputRef, forwardedRef),\n      type: \"checkbox\",\n      name: name,\n      value: value,\n      id: id,\n      tabIndex: tabIndex,\n      onChange: callAllHandlers(props.onChange, handleChange),\n      onBlur: callAllHandlers(props.onBlur, onBlurProp, setFocused.off),\n      onFocus: callAllHandlers(props.onFocus, onFocusProp, setFocused.on),\n      onKeyDown: callAllHandlers(props.onKeyDown, onKeyDown),\n      onKeyUp: callAllHandlers(props.onKeyUp, onKeyUp),\n      required: isRequired,\n      checked: isChecked,\n      disabled: trulyDisabled,\n      readOnly: isReadOnly,\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": ariaLabelledBy,\n      \"aria-invalid\": ariaInvalid ? Boolean(ariaInvalid) : isInvalid,\n      \"aria-describedby\": ariaDescribedBy,\n      \"aria-disabled\": isDisabled,\n      style: visuallyHiddenStyle\n    });\n  }, [name, value, id, handleChange, setFocused.off, setFocused.on, onBlurProp, onFocusProp, onKeyDown, onKeyUp, isRequired, isChecked, trulyDisabled, isReadOnly, ariaLabel, ariaLabelledBy, ariaInvalid, isInvalid, ariaDescribedBy, isDisabled, tabIndex]);\n  var getLabelProps = useCallback(function (props, forwardedRef) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (forwardedRef === void 0) {\n      forwardedRef = null;\n    }\n\n    return _extends({}, props, {\n      ref: forwardedRef,\n      onMouseDown: callAllHandlers(props.onMouseDown, stopEvent),\n      onTouchStart: callAllHandlers(props.onTouchStart, stopEvent),\n      \"data-disabled\": dataAttr(isDisabled),\n      \"data-checked\": dataAttr(isChecked),\n      \"data-invalid\": dataAttr(isInvalid)\n    });\n  }, [isChecked, isDisabled, isInvalid]);\n  var state = {\n    isInvalid: isInvalid,\n    isFocused: isFocused,\n    isChecked: isChecked,\n    isActive: isActive,\n    isHovered: isHovered,\n    isIndeterminate: isIndeterminate,\n    isDisabled: isDisabled,\n    isReadOnly: isReadOnly,\n    isRequired: isRequired\n  };\n  return {\n    state: state,\n    getRootProps: getRootProps,\n    getCheckboxProps: getCheckboxProps,\n    getInputProps: getInputProps,\n    getLabelProps: getLabelProps,\n    htmlProps: htmlProps\n  };\n}\n/**\n * Prevent `onBlur` being fired when the checkbox label is touched\n */\n\nfunction stopEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n\nvar _excluded = [\"spacing\", \"className\", \"children\", \"iconColor\", \"iconSize\", \"icon\", \"isChecked\", \"isDisabled\", \"onChange\", \"inputProps\"];\nvar CheckboxControl = chakra(\"span\", {\n  baseStyle: {\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    verticalAlign: \"top\",\n    userSelect: \"none\",\n    flexShrink: 0\n  }\n});\nvar Label = chakra(\"label\", {\n  baseStyle: {\n    cursor: \"pointer\",\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    verticalAlign: \"top\",\n    position: \"relative\",\n    _disabled: {\n      cursor: \"not-allowed\"\n    }\n  }\n});\n\n/**\n * Checkbox\n *\n * React component used in forms when a user needs to select\n * multiple values from several options.\n *\n * @see Docs https://chakra-ui.com/checkbox\n */\nvar Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var group = useCheckboxGroupContext();\n\n  var mergedProps = _extends({}, group, props);\n\n  var styles = useMultiStyleConfig(\"Checkbox\", mergedProps);\n  var ownProps = omitThemingProps(props);\n\n  var _ownProps$spacing = ownProps.spacing,\n      spacing = _ownProps$spacing === void 0 ? \"0.5rem\" : _ownProps$spacing,\n      className = ownProps.className,\n      children = ownProps.children,\n      iconColor = ownProps.iconColor,\n      iconSize = ownProps.iconSize,\n      _ownProps$icon = ownProps.icon,\n      icon = _ownProps$icon === void 0 ? /*#__PURE__*/React.createElement(CheckboxIcon, null) : _ownProps$icon,\n      isCheckedProp = ownProps.isChecked,\n      _ownProps$isDisabled = ownProps.isDisabled,\n      isDisabled = _ownProps$isDisabled === void 0 ? group == null ? void 0 : group.isDisabled : _ownProps$isDisabled,\n      onChangeProp = ownProps.onChange,\n      inputProps = ownProps.inputProps,\n      rest = _objectWithoutPropertiesLoose(ownProps, _excluded);\n\n  var isChecked = isCheckedProp;\n\n  if (group != null && group.value && ownProps.value) {\n    isChecked = group.value.includes(ownProps.value);\n  }\n\n  var onChange = onChangeProp;\n\n  if (group != null && group.onChange && ownProps.value) {\n    onChange = callAll(group.onChange, onChangeProp);\n  }\n\n  var _useCheckbox = useCheckbox(_extends({}, rest, {\n    isDisabled: isDisabled,\n    isChecked: isChecked,\n    onChange: onChange\n  })),\n      state = _useCheckbox.state,\n      getInputProps = _useCheckbox.getInputProps,\n      getCheckboxProps = _useCheckbox.getCheckboxProps,\n      getLabelProps = _useCheckbox.getLabelProps,\n      getRootProps = _useCheckbox.getRootProps;\n\n  var iconStyles = React.useMemo(function () {\n    return _extends({\n      opacity: state.isChecked || state.isIndeterminate ? 1 : 0,\n      transform: state.isChecked || state.isIndeterminate ? \"scale(1)\" : \"scale(0.95)\",\n      fontSize: iconSize,\n      color: iconColor\n    }, styles.icon);\n  }, [iconColor, iconSize, state.isChecked, state.isIndeterminate, styles.icon]);\n  var clonedIcon = /*#__PURE__*/React.cloneElement(icon, {\n    __css: iconStyles,\n    isIndeterminate: state.isIndeterminate,\n    isChecked: state.isChecked\n  });\n  return /*#__PURE__*/React.createElement(Label, _extends({\n    __css: styles.container,\n    className: cx(\"chakra-checkbox\", className)\n  }, getRootProps()), /*#__PURE__*/React.createElement(\"input\", _extends({\n    className: \"chakra-checkbox__input\"\n  }, getInputProps(inputProps, ref))), /*#__PURE__*/React.createElement(CheckboxControl, _extends({\n    __css: styles.control,\n    className: \"chakra-checkbox__control\"\n  }, getCheckboxProps()), clonedIcon), children && /*#__PURE__*/React.createElement(chakra.span, _extends({\n    className: \"chakra-checkbox__label\"\n  }, getLabelProps(), {\n    __css: _extends({\n      marginStart: spacing\n    }, styles.label)\n  }), children));\n});\n\nif (__DEV__) {\n  Checkbox.displayName = \"Checkbox\";\n}\n\nexport { Checkbox, CheckboxGroup, useCheckbox, useCheckboxGroup, useCheckboxGroupContext };\n"]},"metadata":{},"sourceType":"module"}