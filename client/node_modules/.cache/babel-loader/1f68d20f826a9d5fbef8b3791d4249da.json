{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, HStack, Input, useToast } from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    createTodo\n  } = _ref;\n  const [content, setContent] = useState({\n    name: '',\n    description: '',\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const toast = useToast();\n\n  const onChange = e => {\n    setContent({ ...content,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!content) {\n      toast({\n        title: 'No content',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n      return;\n    } else {\n      createTodo(e, content);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(HStack, {\n      mt: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"name\",\n        name: \"name\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), \"Description: \", /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"description\",\n        name: \"description\",\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 30\n      }, this), \"Start Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: content.startDate,\n        onChange: date => setContent({ ...content,\n          startDate: date\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }, this), \"End Date: \", /*#__PURE__*/_jsxDEV(DatePicker, {\n        selected: content.endDate,\n        onChange: date => setContent({ ...content,\n          endDate: date\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n      mt: \"8\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSubmit,\n        colorScheme: \"pink\",\n        px: \"8\",\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"zWNaoCyzXtCMM8kDkDU4xJ72qu8=\", false, function () {\n  return [useToast];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx"],"names":["React","useState","Button","HStack","Input","useToast","DatePicker","AddTodo","createTodo","content","setContent","name","description","startDate","Date","endDate","toast","onChange","e","target","value","handleSubmit","preventDefault","title","status","duration","isClosable","date"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAaC,MAAb,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,QAApC,QAAyD,kBAAzD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAO,4CAAP;;;AAMA,MAAMC,OAAwB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC;AACnCU,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,WAAW,EAAE,EAFsB;AAGnCC,IAAAA,SAAS,EAAE,IAAIC,IAAJ,EAHwB;AAInCC,IAAAA,OAAO,EAAE,IAAID,IAAJ;AAJ0B,GAAD,CAAtC;AAMA,QAAME,KAAK,GAAGX,QAAQ,EAAtB;;AAEA,QAAMY,QAAQ,GAAGC,CAAC,IAAI;AAClBR,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAa,OAACS,CAAC,CAACC,MAAF,CAASR,IAAV,GAAiBO,CAAC,CAACC,MAAF,CAASC;AAAvC,KAAD,CAAV;AACH,GAFD;;AAIA,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACb,OAAL,EAAc;AACVO,MAAAA,KAAK,CAAC;AACFO,QAAAA,KAAK,EAAE,YADL;AAEFC,QAAAA,MAAM,EAAE,OAFN;AAGFC,QAAAA,QAAQ,EAAE,IAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OAAD,CAAL;AAMA;AACH,KARD,MAQO;AACHlB,MAAAA,UAAU,CAACU,CAAD,EAAIT,OAAJ,CAAV;AACH;AACJ;;AAED,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,WAAW,EAAC,MADhB;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAEQ;AAHd;AAAA;AAAA;AAAA;AAAA,cADJ,gCAMiB,QAAC,KAAD;AACb,QAAA,WAAW,EAAC,aADC;AAEb,QAAA,IAAI,EAAC,aAFQ;AAGb,QAAA,QAAQ,EAAEA;AAHG;AAAA;AAAA;AAAA;AAAA,cANjB,+BAWgB,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAER,OAAO,CAACI,SAA9B;AACY,QAAA,QAAQ,EAAGc,IAAD,IAAgBjB,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaI,UAAAA,SAAS,EAAEc;AAAxB,SAAD;AADhD;AAAA;AAAA;AAAA;AAAA,cAXhB,6BAac,QAAC,UAAD;AAAY,QAAA,QAAQ,EAAElB,OAAO,CAACM,OAA9B;AACY,QAAA,QAAQ,EAAGY,IAAD,IAAgBjB,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAaM,UAAAA,OAAO,EAAEY;AAAtB,SAAD;AADhD;AAAA;AAAA;AAAA;AAAA,cAbd;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAEN,YAAjB;AAA+B,QAAA,WAAW,EAAC,MAA3C;AAAkD,QAAA,EAAE,EAAC,GAArD;AAAyD,QAAA,IAAI,EAAC,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CArDD;;GAAMd,O;UAOYF,Q;;;KAPZE,O;AAuDN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\nimport {Box, Button, HStack, Input, useToast, Text} from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n    createTodo: (e: React.FormEvent, formData: Todo | any) => void\n}\n\nconst AddTodo: React.FC<Props> = ({createTodo}) => {\n    const [content, setContent] = useState({\n        name: '',\n        description: '',\n        startDate: new Date(),\n        endDate: new Date()\n    });\n    const toast = useToast();\n\n    const onChange = e => {\n        setContent({...content, [e.target.name]: e.target.value});\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!content) {\n            toast({\n                title: 'No content',\n                status: 'error',\n                duration: 2000,\n                isClosable: true,\n            });\n            return;\n        } else {\n            createTodo(e, content);\n        }\n    }\n\n    return (\n        <form>\n            <HStack mt='8'>\n                <Input\n                    placeholder='name'\n                    name='name'\n                    onChange={onChange}\n                />\n                Description: <Input\n                placeholder='description'\n                name='description'\n                onChange={onChange}\n            />\n                Start Date: <DatePicker selected={content.startDate}\n                                        onChange={(date: Date) => setContent({...content, startDate: date})}/>\n                End Date: <DatePicker selected={content.endDate}\n                                      onChange={(date: Date) => setContent({...content, endDate: date})}/>\n            </HStack>\n            <HStack mt='8'>\n                <Button onClick={handleSubmit} colorScheme='pink' px='8' type='submit'>\n                    Add Todo\n                </Button>\n            </HStack>\n        </form>\n    )\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}