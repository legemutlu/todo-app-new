{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport TodoItem from '../../components/TodoItem';\nimport AddTodo from '../../components/AddTodo';\nimport { getTodos, createTodo, updateTodo, deleteTodo } from '../../api/TodoAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n  useEffect(() => {\n    fetchTodos();\n  }, []);\n\n  const fetchTodos = () => {\n    getTodos().then(todos => setTodos(todos)).catch(err => console.log(err));\n  };\n\n  const handleSaveTodo = (e, formData) => {\n    e.preventDefault();\n    createTodo(formData).then(_ref => {\n      let {\n        status,\n        data\n      } = _ref;\n\n      if (status !== 201) {\n        throw new Error('Error! Todo not saved');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleUpdateTodo = todo => {\n    updateTodo(todo.id, todo).then(_ref2 => {\n      let {\n        status,\n        data\n      } = _ref2;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not updated');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  const handleDeleteTodo = _id => {\n    deleteTodo(_id).then(_ref3 => {\n      let {\n        status,\n        data\n      } = _ref3;\n\n      if (status !== 200) {\n        throw new Error('Error! Todo not deleted');\n      }\n\n      setTodos(data.todos);\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTodo, {\n      saveTodo: handleSaveTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n      updateTodo: handleUpdateTodo,\n      deleteTodo: handleDeleteTodo,\n      todo: todo\n    }, todo._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(App, \"4w2FR3x+JAhc2MKl4V8naiLXs70=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/routes/Home/Home.tsx"],"names":["React","useEffect","useState","TodoItem","AddTodo","getTodos","createTodo","updateTodo","deleteTodo","App","todos","setTodos","fetchTodos","then","catch","err","console","log","handleSaveTodo","e","formData","preventDefault","status","data","Error","handleUpdateTodo","todo","id","handleDeleteTodo","_id","map"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport TodoItem from '../../components/TodoItem'\nimport AddTodo from '../../components/AddTodo'\nimport {getTodos, createTodo, updateTodo, deleteTodo} from '../../api/TodoAPI'\n\nconst App: React.FC = () => {\n    const [todos, setTodos] = useState<Todo[]>([])\n\n    useEffect(() => {\n        fetchTodos()\n    }, [])\n\n    const fetchTodos = (): void => {\n        getTodos()\n            .then((todos: Todo[] | any) => setTodos(todos))\n            .catch((err: Error) => console.log(err))\n    }\n\n    const handleSaveTodo = (e: React.FormEvent, formData: Todo): void => {\n        e.preventDefault()\n        createTodo(formData)\n            .then(({status, data}) => {\n                if (status !== 201) {\n                    throw new Error('Error! Todo not saved')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleUpdateTodo = (todo: Todo): void => {\n        updateTodo(todo.id, todo)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not updated')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    const handleDeleteTodo = (_id: string): void => {\n        deleteTodo(_id)\n            .then(({status, data}) => {\n                if (status !== 200) {\n                    throw new Error('Error! Todo not deleted')\n                }\n                setTodos(data.todos)\n            })\n            .catch((err) => console.log(err))\n    }\n\n    return (\n        <main className='App'>\n            <h1>My Todos</h1>\n            <AddTodo saveTodo={handleSaveTodo}/>\n            {todos.map((todo: Todo) => (\n                <TodoItem\n                    key={todo._id}\n                    updateTodo={handleUpdateTodo}\n                    deleteTodo={handleDeleteTodo}\n                    todo={todo}\n                />\n            ))}\n        </main>\n    )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}