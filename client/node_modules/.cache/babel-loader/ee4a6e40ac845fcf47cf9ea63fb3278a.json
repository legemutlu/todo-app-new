{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/TodoItem.tsx\";\nimport React from 'react';\nimport { HStack, VStack, Text, IconButton, StackDivider, Spacer } from '@chakra-ui/react';\nimport { FaTrash } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = _ref => {\n  let {\n    todos,\n    updateTodo,\n    deleteTodo\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    divider: /*#__PURE__*/_jsxDEV(StackDivider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 22\n    }, this),\n    borderColor: \"gray.100\",\n    borderWidth: \"2px\",\n    p: \"4\",\n    borderRadius: \"lg\",\n    w: \"100%\",\n    maxW: {\n      base: '90vw',\n      sm: '80vw',\n      lg: '50vw',\n      xl: '40vw'\n    },\n    alignItems: \"stretch\",\n    children: todos.map(todo => /*#__PURE__*/_jsxDEV(HStack, {\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        children: todo.body\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Spacer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        icon: /*#__PURE__*/_jsxDEV(FaTrash, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 31\n        }, this),\n        isRound: true,\n        onClick: () => deleteTodo(todo.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/TodoItem.tsx"],"names":["React","HStack","VStack","Text","IconButton","StackDivider","Spacer","FaTrash","Todo","todos","updateTodo","deleteTodo","base","sm","lg","xl","map","todo","body","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,MADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,UAJJ,EAKIC,YALJ,EAMIC,MANJ,QAQO,kBARP;AASA,SAAQC,OAAR,QAAsB,gBAAtB;;;AAOA,MAAMC,IAAqB,GAAG,QAAqC;AAAA,MAApC;AAACC,IAAAA,KAAD;AAAQC,IAAAA,UAAR;AAAoBC,IAAAA;AAApB,GAAoC;AAC/D,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,eAAE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADb;AAEI,IAAA,WAAW,EAAC,UAFhB;AAGI,IAAA,WAAW,EAAC,KAHhB;AAII,IAAA,CAAC,EAAC,GAJN;AAKI,IAAA,YAAY,EAAC,IALjB;AAMI,IAAA,CAAC,EAAC,MANN;AAOI,IAAA,IAAI,EAAE;AAACC,MAAAA,IAAI,EAAE,MAAP;AAAeC,MAAAA,EAAE,EAAE,MAAnB;AAA2BC,MAAAA,EAAE,EAAE,MAA/B;AAAuCC,MAAAA,EAAE,EAAE;AAA3C,KAPV;AAQI,IAAA,UAAU,EAAC,SARf;AAAA,cAUKN,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACP,QAAC,MAAD;AAAA,8BACI,QAAC,IAAD;AAAA,kBAAOA,IAAI,CAACC;AAAZ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,UAAD;AACI,QAAA,IAAI,eAAE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBADV;AAEI,QAAA,OAAO,EAAE,IAFb;AAGI,QAAA,OAAO,EAAE,MAAMP,UAAU,CAACM,IAAI,CAACE,EAAN;AAH7B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,OAAaF,IAAI,CAACE,EAAlB;AAAA;AAAA;AAAA;AAAA,YADH;AAVL;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CAzBD;;KAAMX,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport {\n    HStack,\n    VStack,\n    Text,\n    IconButton,\n    StackDivider,\n    Spacer,\n    Badge,\n} from '@chakra-ui/react';\nimport {FaTrash} from 'react-icons/fa';\n\ntype Props = TodoProps & {\n    updateTodo: (todo: Todo) => void\n    deleteTodo: (_id: string) => void\n}\n\nconst Todo: React.FC<Props> = ({todos, updateTodo, deleteTodo}) => {\n    return (\n        <VStack\n            divider={<StackDivider/>}\n            borderColor='gray.100'\n            borderWidth='2px'\n            p='4'\n            borderRadius='lg'\n            w='100%'\n            maxW={{base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw'}}\n            alignItems='stretch'\n        >\n            {todos.map((todo) => (\n                <HStack key={todo.id}>\n                    <Text>{todo.body}</Text>\n                    <Spacer/>\n                    <IconButton\n                        icon={<FaTrash/>}\n                        isRound={true}\n                        onClick={() => deleteTodo(todo.id)}\n                    />\n                </HStack>\n            ))}\n        </VStack>\n    )\n}\n\nexport default Todo"]},"metadata":{},"sourceType":"module"}