{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, HStack, Input, useToast, Text, VStack, StackDivider, Flex, Heading, FormControl, FormLabel, InputGroup, InputRightElement } from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    createTodo\n  } = _ref;\n  const [content, setContent] = useState({\n    name: '',\n    description: '',\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const toast = useToast();\n\n  const onChange = e => {\n    setContent({ ...content,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!content) {\n      toast({\n        title: 'No content',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n      return;\n    } else {\n      createTodo(e, content);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      width: \"full\",\n      align: \"center\",\n      justifyContent: \"center\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 8,\n        maxWidth: \"1000px\",\n        borderWidth: 1,\n        borderRadius: 8,\n        boxShadow: \"lg\",\n        width: \"50%\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Heading, {\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          my: 12,\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              width: \"40%\",\n              mr: \"5px\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Todo Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"lg\",\n                placeholder: \"name\",\n                name: \"name\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              width: \"40%\",\n              mr: \"5px\",\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Todo Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Input, {\n                size: \"lg\",\n                placeholder: \"name\",\n                name: \"name\",\n                onChange: onChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n              isRequired: true,\n              mt: 6,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  size: \"lg\",\n                  placeholder: \"description\",\n                  name: \"description\",\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n                  width: \"3rem\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    h: \"1.5rem\",\n                    size: \"sm\",\n                    onClick: handleSubmit\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 37\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline\",\n              type: \"submit\",\n              width: \"full\",\n              mt: 4,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(HStack, {\n        mt: \"8\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"name\",\n          name: \"name\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"description\",\n          name: \"description\",\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VStack, {\n        divider: /*#__PURE__*/_jsxDEV(StackDivider, {\n          borderColor: \"gray.200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 30\n        }, this),\n        spacing: 4,\n        align: \"stretch\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Text, {\n            fontSize: \"lg\",\n            children: \" Start Date: \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n            selected: content.startDate,\n            onChange: date => setContent({ ...content,\n              startDate: date\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        mt: \"8\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          colorScheme: \"pink\",\n          px: \"8\",\n          type: \"submit\",\n          children: \"Add Todo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AddTodo, \"zWNaoCyzXtCMM8kDkDU4xJ72qu8=\", false, function () {\n  return [useToast];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx"],"names":["React","useState","Box","Button","HStack","Input","useToast","Text","VStack","StackDivider","Flex","Heading","FormControl","FormLabel","InputGroup","InputRightElement","DatePicker","AddTodo","createTodo","content","setContent","name","description","startDate","Date","endDate","toast","onChange","e","target","value","handleSubmit","preventDefault","title","status","duration","isClosable","date"],"mappings":"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","sourcesContent":["import React, {forwardRef, useState} from 'react'\nimport {\n    Box,\n    Button,\n    HStack,\n    Input,\n    useToast,\n    Text,\n    VStack,\n    StackDivider,\n    Flex,\n    Heading,\n    FormControl, FormLabel, InputGroup, InputRightElement, CircularProgress, Container\n} from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\ntype Props = {\n    createTodo: (e: React.FormEvent, formData: Todo | any) => void,\n}\n\nconst AddTodo: React.FC<Props> = ({createTodo}) => {\n    const [content, setContent] = useState({\n        name: '',\n        description: '',\n        startDate: new Date(),\n        endDate: new Date()\n    });\n\n\n    const toast = useToast();\n\n    const onChange = e => {\n        setContent({...content, [e.target.name]: e.target.value});\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!content) {\n            toast({\n                title: 'No content',\n                status: 'error',\n                duration: 2000,\n                isClosable: true,\n            });\n            return;\n        } else {\n            createTodo(e, content);\n        }\n    }\n\n    return (\n        <><Flex width=\"full\" align=\"center\" justifyContent=\"center\">\n            <Box\n                p={8}\n                maxWidth=\"1000px\"\n                borderWidth={1}\n                borderRadius={8}\n                boxShadow=\"lg\"\n                width='50%'\n            >\n                <Box textAlign=\"center\">\n                    <Heading>Login</Heading>\n                </Box>\n                <Box my={12}>\n                    <form onSubmit={handleSubmit}>\n                        <FormControl isRequired width='40%' mr='5px'>\n                            <FormLabel>Todo Name</FormLabel>\n                            <Input\n                                size='lg'\n                                placeholder='name'\n                                name='name'\n                                onChange={onChange}/>\n                        </FormControl>\n\n                        <FormControl isRequired width='40%' mr='5px'>\n                            <FormLabel>Todo Name</FormLabel>\n                            <Input\n                                size='lg'\n                                placeholder='name'\n                                name='name'\n                                onChange={onChange}/>\n                        </FormControl>\n                        <FormControl isRequired mt={6}>\n                            <FormLabel>Password</FormLabel>\n                            <InputGroup>\n                                <Input\n                                    size='lg'\n                                    placeholder='description'\n                                    name='description'\n                                    onChange={onChange}/>\n                                <InputRightElement width=\"3rem\">\n                                    <Button\n                                        h=\"1.5rem\"\n                                        size=\"sm\"\n                                        onClick={handleSubmit}\n                                    >\n                                    </Button>\n                                </InputRightElement>\n                            </InputGroup>\n                        </FormControl>\n                        <Button\n                            variant=\"outline\"\n                            type=\"submit\"\n                            width=\"full\"\n                            mt={4}\n                        >\n                            Submit\n                            {/*<CircularProgress*/}\n                            {/*    isIndeterminate*/}\n                            {/*    size=\"24px\"*/}\n                            {/*    color=\"teal\"/>*/}\n                        </Button>\n                    </form>\n                </Box>\n            </Box>\n        </Flex>\n            <form>\n                <HStack mt='8'>\n                    <Input\n                        placeholder='name'\n                        name='name'\n                        onChange={onChange}/>\n                    <Input\n                        placeholder='description'\n                        name='description'\n                        onChange={onChange}/>\n                </HStack>\n                <VStack\n                    divider={<StackDivider borderColor='gray.200'/>}\n                    spacing={4}\n                    align='stretch'\n                >\n                    <Box>\n                        <Text fontSize='lg'> Start Date: </Text>\n                        <DatePicker selected={content.startDate}\n                                    onChange={(date: Date) => setContent({\n                                        ...content,\n                                        startDate: date\n                                    })}/>\n                    </Box>\n                </VStack>\n                <HStack mt='8' align='center'>\n                    <Button onClick={handleSubmit} colorScheme='pink' px='8' type='submit'>\n                        Add Todo\n                    </Button>\n                </HStack>\n            </form>\n        </>\n    )\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}