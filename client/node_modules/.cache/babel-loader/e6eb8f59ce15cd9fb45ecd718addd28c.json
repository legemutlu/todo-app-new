{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Box, Button, Input, Flex, FormControl, FormLabel } from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ErrorMessage from \"./ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    createTodo\n  } = _ref;\n  const [content, setContent] = useState({\n    name: '',\n    description: '',\n    startDate: new Date(),\n    endDate: new Date()\n  });\n  const [error, setError] = useState('');\n\n  const onChange = e => {\n    setContent({ ...content,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (content.name === '' && content.description === '') {\n      setError('Name or Description Can Not Be Empty!');\n    } else {\n      console.log(content);\n      createTodo(e, content);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    width: \"full\",\n    align: \"center\",\n    justifyContent: \"center\",\n    my: 25,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      p: 8,\n      maxWidth: \"600px\",\n      borderWidth: 1,\n      borderRadius: 8,\n      boxShadow: \"lg\",\n      width: \"50%\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            message: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 35\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            width: \"40%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Todo Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              size: \"lg\",\n              placeholder: \"name\",\n              name: \"name\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            isRequired: true,\n            width: \"40%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Todo Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              size: \"lg\",\n              placeholder: \"description\",\n              name: \"description\",\n              onChange: onChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            width: \"40%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Start Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: content.startDate,\n              onChange: date => setContent({ ...content,\n                startDate: date\n              }),\n              minDate: new Date()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            width: \"40%\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"End Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n              selected: content.endDate,\n              onChange: date => setContent({ ...content,\n                endDate: date\n              }),\n              minDate: content.startDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            width: \"full\",\n            mt: 4,\n            colorScheme: \"pink\",\n            onClick: handleSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"FDqK/StsbqYKZJyNl/H89KwRmQc=\");\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx"],"names":["React","useState","Box","Button","Input","Flex","FormControl","FormLabel","DatePicker","ErrorMessage","AddTodo","createTodo","content","setContent","name","description","startDate","Date","endDate","error","setError","onChange","e","target","value","handleSubmit","preventDefault","console","log","date"],"mappings":"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","sourcesContent":["import React, {forwardRef, useState} from 'react'\nimport {\n    Box,\n    Button,\n    HStack,\n    Input,\n    useToast,\n    Text,\n    VStack,\n    StackDivider,\n    Flex,\n    Heading,\n    FormControl, FormLabel, InputGroup, InputRightElement, CircularProgress, Container\n} from '@chakra-ui/react';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport ErrorMessage from \"./ErrorMessage\";\n\ntype Props = {\n    createTodo: (e: React.FormEvent, formData: Todo | any) => void,\n}\n\nconst AddTodo: React.FC<Props> = ({createTodo}) => {\n    const [content, setContent] = useState({\n        name: '',\n        description: '',\n        startDate: new Date(),\n        endDate: new Date()\n    });\n    const [error, setError] = useState('');\n\n    const onChange = e => {\n        setContent({...content, [e.target.name]: e.target.value});\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (content.name === '' && content.description === '') {\n            setError('Name or Description Can Not Be Empty!');\n        } else {\n            console.log(content)\n            createTodo(e, content);\n        }\n    }\n\n    return (\n        <Flex width=\"full\" align=\"center\" justifyContent=\"center\" my={25}>\n            <Box\n                p={8}\n                maxWidth=\"600px\"\n                borderWidth={1}\n                borderRadius={8}\n                boxShadow=\"lg\"\n                width='50%'\n            >\n                <Box my={2}>\n                    <form onSubmit={handleSubmit}>\n                        {error && <ErrorMessage message={error}/>}\n                        <FormControl isRequired width='40%'>\n                            <FormLabel>Todo Name</FormLabel>\n                            <Input\n                                size='lg'\n                                placeholder='name'\n                                name='name'\n                                onChange={onChange}/>\n                        </FormControl>\n\n                        <FormControl isRequired width='40%'>\n                            <FormLabel>Todo Description</FormLabel>\n                            <Input\n                                size='lg'\n                                placeholder='description'\n                                name='description'\n                                onChange={onChange}/>\n                        </FormControl>\n\n                        <FormControl width='40%'>\n                            <FormLabel>Start Date</FormLabel>\n                            <DatePicker selected={content.startDate}\n                                        onChange={(date: Date) => setContent({\n                                            ...content,\n                                            startDate: date\n                                        })}\n                                        minDate={new Date()}/>\n                        </FormControl>\n                        <FormControl width='40%'>\n                            <FormLabel>End Date</FormLabel>\n                            <DatePicker selected={content.endDate}\n                                        onChange={(date: Date) => setContent({\n                                            ...content,\n                                            endDate: date\n                                        })}\n                                        minDate={content.startDate}/>\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            width=\"full\"\n                            mt={4}\n                            colorScheme='pink'\n                            onClick={handleSubmit}\n                        >\n                            Submit\n                        </Button>\n                    </form>\n                </Box>\n            </Box>\n        </Flex>\n    )\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}