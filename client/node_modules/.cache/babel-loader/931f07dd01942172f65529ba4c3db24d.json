{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = 'http://localhost:8000/api/todos';\nexport const getTodos = async () => {\n  try {\n    const todos = await axios.get(baseUrl);\n    return todos;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const addTodo = async formData => {\n  try {\n    const todo = {\n      name: formData.name,\n      description: formData.description,\n      status: false\n    };\n    const saveTodo = await axios.post(baseUrl, todo);\n    return saveTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const updateTodo = async todo => {\n  try {\n    const updatedTodo = await axios.patch(`${baseUrl}/${todo._id}`, todoUpdate);\n    return updatedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};\nexport const deleteTodo = async _id => {\n  try {\n    const deletedTodo = await axios.delete(`${baseUrl}/${_id}`);\n    return deletedTodo;\n  } catch (error) {\n    throw new Error(error);\n  }\n};","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/api/TodoAPI.ts"],"names":["axios","baseUrl","getTodos","todos","get","error","Error","addTodo","formData","todo","name","description","status","saveTodo","post","updateTodo","updatedTodo","patch","_id","todoUpdate","deleteTodo","deletedTodo","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAmC,OAAnC;AAEA,MAAMC,OAAe,GAAG,iCAAxB;AAEA,OAAO,MAAMC,QAAQ,GAAG,YAAiD;AACrE,MAAI;AACA,UAAMC,KAAiC,GAAG,MAAMH,KAAK,CAACI,GAAN,CAC5CH,OAD4C,CAAhD;AAGA,WAAOE,KAAP;AACH,GALD,CAKE,OAAOE,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CATM;AAWP,OAAO,MAAME,OAAO,GAAG,MACnBC,QADmB,IAEmB;AACtC,MAAI;AACA,UAAMC,IAAuB,GAAG;AAC5BC,MAAAA,IAAI,EAAEF,QAAQ,CAACE,IADa;AAE5BC,MAAAA,WAAW,EAAEH,QAAQ,CAACG,WAFM;AAG5BC,MAAAA,MAAM,EAAE;AAHoB,KAAhC;AAKA,UAAMC,QAAoC,GAAG,MAAMb,KAAK,CAACc,IAAN,CAC/Cb,OAD+C,EAE/CQ,IAF+C,CAAnD;AAIA,WAAOI,QAAP;AACH,GAXD,CAWE,OAAOR,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAjBM;AAmBP,OAAO,MAAMU,UAAU,GAAG,MACtBN,IADsB,IAEgB;AACtC,MAAI;AACA,UAAMO,WAAuC,GAAG,MAAMhB,KAAK,CAACiB,KAAN,CACjD,GAAEhB,OAAQ,IAAGQ,IAAI,CAACS,GAAI,EAD2B,EAElDC,UAFkD,CAAtD;AAIA,WAAOH,WAAP;AACH,GAND,CAME,OAAOX,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAZM;AAcP,OAAO,MAAMe,UAAU,GAAG,MACtBF,GADsB,IAEgB;AACtC,MAAI;AACA,UAAMG,WAAuC,GAAG,MAAMrB,KAAK,CAACsB,MAAN,CACjD,GAAErB,OAAQ,IAAGiB,GAAI,EADgC,CAAtD;AAGA,WAAOG,WAAP;AACH,GALD,CAKE,OAAOhB,KAAP,EAAmB;AACjB,UAAM,IAAIC,KAAJ,CAAUD,KAAV,CAAN;AACH;AACJ,CAXM","sourcesContent":["import axios, {AxiosResponse} from 'axios'\n\nconst baseUrl: string = 'http://localhost:8000/api/todos'\n\nexport const getTodos = async (): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todos: AxiosResponse<ApiDataType> = await axios.get(\n            baseUrl\n        )\n        return todos\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const addTodo = async (\n    formData: Todo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const todo: Omit<Todo, '_id'> = {\n            name: formData.name,\n            description: formData.description,\n            status: false,\n        }\n        const saveTodo: AxiosResponse<ApiDataType> = await axios.post(\n            baseUrl,\n            todo\n        )\n        return saveTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const updateTodo = async (\n    todo: Todo\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const updatedTodo: AxiosResponse<ApiDataType> = await axios.patch(\n            `${baseUrl}/${todo._id}`,\n            todoUpdate\n        )\n        return updatedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}\n\nexport const deleteTodo = async (\n    _id: string\n): Promise<AxiosResponse<ApiDataType>> => {\n    try {\n        const deletedTodo: AxiosResponse<ApiDataType> = await axios.delete(\n            `${baseUrl}/${_id}`\n        )\n        return deletedTodo\n    } catch (error: any) {\n        throw new Error(error)\n    }\n}"]},"metadata":{},"sourceType":"module"}