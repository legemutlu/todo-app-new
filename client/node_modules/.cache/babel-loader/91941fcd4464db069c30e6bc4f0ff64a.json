{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/index.tsx\";\nimport React from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport { BrowserRouter } from 'react-router-dom';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from \"./store\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Root = () => /*#__PURE__*/_jsxDEV(Provider, {\n  store: store,\n  children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n      children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 5\n}, this);\n\n_c = Root;\nconst rootElement = document.getElementById('root');\nconst root = rootElement ? ReactDOMClient.createRoot(rootElement) : null;\nif (root) root.render( /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 24,\n  columnNumber: 23\n}, this));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/index.tsx"],"names":["React","ReactDOMClient","BrowserRouter","ChakraProvider","Provider","App","store","Root","rootElement","document","getElementById","root","createRoot","render"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,OAAO,KAAKC,cAAZ,MAAgC,kBAAhC;AACA,SAAQC,aAAR,QAA4B,kBAA5B;AACA,SAAQC,cAAR,QAA6B,kBAA7B;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAO,aAAP;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,IAAuB,GAAG,mBAC5B,QAAC,QAAD;AAAU,EAAA,KAAK,EAAED,KAAjB;AAAA,yBACI,QAAC,aAAD;AAAA,2BACI,QAAC,cAAD;AAAA,6BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,QADJ;;KAAMC,I;AAUN,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA,MAAMC,IAAI,GAAGH,WAAW,GAAGP,cAAc,CAACW,UAAf,CAA0BJ,WAA1B,CAAH,GAA4C,IAApE;AAEA,IAAIG,IAAJ,EAAUA,IAAI,CAACE,MAAL,eAAY,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,QAAZ","sourcesContent":["import React, {FunctionComponent} from 'react';\nimport * as ReactDOMClient from 'react-dom/client';\nimport {BrowserRouter} from 'react-router-dom';\nimport {ChakraProvider} from '@chakra-ui/react';\nimport {Provider} from 'react-redux';\nimport './index.css';\n\nimport App from './App';\nimport store from \"./store\";\n\nconst Root: FunctionComponent = () => (\n    <Provider store={store}>\n        <BrowserRouter>\n            <ChakraProvider>\n                <App/>\n            </ChakraProvider>\n        </BrowserRouter>\n    </Provider>\n);\n\nconst rootElement = document.getElementById('root');\nconst root = rootElement ? ReactDOMClient.createRoot(rootElement) : null;\n\nif (root) root.render(<Root/>);"]},"metadata":{},"sourceType":"module"}