{"ast":null,"code":"var _jsxFileName = \"/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, HStack, Input, useToast } from '@chakra-ui/react';\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AddTodo = _ref => {\n  _s();\n\n  let {\n    createTodo\n  } = _ref;\n  const dispatch = useDispatch();\n  const [content, setContent] = useState({\n    name: '',\n    description: ''\n  });\n  const toast = useToast();\n\n  const onChange = e => {\n    setContent({ ...content,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!content) {\n      toast({\n        title: 'No content',\n        status: 'error',\n        duration: 2000,\n        isClosable: true\n      });\n      return;\n    } else {\n      createTodo(content);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(HStack, {\n      mt: \"8\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        variant: \"filled\",\n        placeholder: \"learning chakraui with todo app\",\n        value: content.name,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        variant: \"filled\",\n        placeholder: \"learning chakraui with todo app\",\n        value: content.description,\n        onChange: onChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"pink\",\n        px: \"8\",\n        type: \"submit\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddTodo, \"hO2lfBP0SqOM5RK5baFr8WwlvLM=\", false, function () {\n  return [useDispatch, useToast];\n});\n\n_c = AddTodo;\nexport default AddTodo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddTodo\");","map":{"version":3,"sources":["/Users/lege/Projects/getir-project/client/src/components/AddTodo.tsx"],"names":["React","useState","Button","HStack","Input","useToast","useDispatch","AddTodo","createTodo","dispatch","content","setContent","name","description","toast","onChange","e","target","value","handleSubmit","preventDefault","title","status","duration","isClosable"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,QAA/B,QAA8C,kBAA9C;AACA,SAAQC,WAAR,QAA0B,aAA1B;;;AAMA,MAAMC,OAAwB,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAACC,IAAAA;AAAD,GAAiB;AAC/C,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM,CAACI,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AACnCW,IAAAA,IAAI,EAAE,EAD6B;AAEnCC,IAAAA,WAAW,EAAE;AAFsB,GAAD,CAAtC;AAIA,QAAMC,KAAK,GAAGT,QAAQ,EAAtB;;AAEA,QAAMU,QAAQ,GAAGC,CAAC,IAAI;AAClBL,IAAAA,UAAU,CAAC,EAAC,GAAGD,OAAJ;AAAa,OAACM,CAAC,CAACC,MAAF,CAASL,IAAV,GAAiBI,CAAC,CAACC,MAAF,CAASC;AAAvC,KAAD,CAAV;AACH,GAFD;;AAIA,WAASC,YAAT,CAAsBH,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACI,cAAF;;AACA,QAAI,CAACV,OAAL,EAAc;AACVI,MAAAA,KAAK,CAAC;AACFO,QAAAA,KAAK,EAAE,YADL;AAEFC,QAAAA,MAAM,EAAE,OAFN;AAGFC,QAAAA,QAAQ,EAAE,IAHR;AAIFC,QAAAA,UAAU,EAAE;AAJV,OAAD,CAAL;AAMA;AACH,KARD,MAQO;AACHhB,MAAAA,UAAU,CAACE,OAAD,CAAV;AACH;AACJ;;AAED,sBACI;AAAM,IAAA,QAAQ,EAAES,YAAhB;AAAA,2BACI,QAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,GAAX;AAAA,8BACI,QAAC,KAAD;AACI,QAAA,OAAO,EAAC,QADZ;AAEI,QAAA,WAAW,EAAC,iCAFhB;AAGI,QAAA,KAAK,EAAET,OAAO,CAACE,IAHnB;AAII,QAAA,QAAQ,EAAEG;AAJd;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI,QAAC,KAAD;AACI,QAAA,OAAO,EAAC,QADZ;AAEI,QAAA,WAAW,EAAC,iCAFhB;AAGI,QAAA,KAAK,EAAEL,OAAO,CAACG,WAHnB;AAII,QAAA,QAAQ,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA,cAPJ,eAaI,QAAC,MAAD;AAAQ,QAAA,WAAW,EAAC,MAApB;AAA2B,QAAA,EAAE,EAAC,GAA9B;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH,CAhDD;;GAAMR,O;UACeD,W,EAKHD,Q;;;KANZE,O;AAkDN,eAAeA,OAAf","sourcesContent":["import React, {useState} from 'react'\nimport {Button, HStack, Input, useToast} from '@chakra-ui/react';\nimport {useDispatch} from \"react-redux\";\n\ntype Props = {\n    createTodo: (formData: Todo | any) => void\n}\n\nconst AddTodo: React.FC<Props> = ({createTodo}) => {\n    const dispatch = useDispatch();\n    const [content, setContent] = useState({\n        name: '',\n        description: ''\n    });\n    const toast = useToast();\n\n    const onChange = e => {\n        setContent({...content, [e.target.name]: e.target.value});\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!content) {\n            toast({\n                title: 'No content',\n                status: 'error',\n                duration: 2000,\n                isClosable: true,\n            });\n            return;\n        } else {\n            createTodo(content);\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <HStack mt='8'>\n                <Input\n                    variant='filled'\n                    placeholder='learning chakraui with todo app'\n                    value={content.name}\n                    onChange={onChange}\n                />\n                <Input\n                    variant='filled'\n                    placeholder='learning chakraui with todo app'\n                    value={content.description}\n                    onChange={onChange}\n                />\n                <Button colorScheme='pink' px='8' type='submit'>\n                    Add Todo\n                </Button>\n            </HStack>\n        </form>\n    )\n}\n\nexport default AddTodo"]},"metadata":{},"sourceType":"module"}